set.seed(100)
n <-10^4 # Tamaño de la muestra
X <- rnorm(n, mean = 5, sd = 5)
X <- rnorm(n, mean = 5, sd = 25)
X <- rnorm(n, mean = 5, sd = 25)
X
# Creamos una nueva ventana de gráficos
par(mfrow = c(1, 1))  # Una fila y una columna en la ventana de gráficos
# Graficamos X y A en el mismo gráfico de dispersión
plot(X, col = "blue", pch = 16, main = "Gráfico de dispersión de X y A", xlab = "X", ylab = "A")
points(A, col = "red", pch = 16)
# Agregamos una leyenda
legend("topright", legend = c("X", "A"), col = c("blue", "red"), pch = 16)
g<-Vectorize(function(x) (exp(-((x)^(2))))/(sqrt(2*pi))/(exp(-x - 5)))
A <- rexp(n) - 5
# Creamos una nueva ventana de gráficos
par(mfrow = c(1, 1))  # Una fila y una columna en la ventana de gráficos
# Graficamos X y A en el mismo gráfico de dispersión
plot(X, col = "blue", pch = 16, main = "Gráfico de dispersión de X y A", xlab = "X", ylab = "A")
points(A, col = "red", pch = 16)
# Agregamos una leyenda
legend("topright", legend = c("X", "A"), col = c("blue", "red"), pch = 16)
g<-Vectorize(function(x) (exp(-((x)^(2))))/(sqrt(2*pi))/(exp(-x - 5)))
set.seed(1410) # definimos una semilla
n <-10^4 # tamaño de la muestra
U <-runif(n, min = 1.9, max = 2.1) # genera un vector con distribución uniforme
g <-Vectorize(function(x) log(x)) # construimos función g
curve(g,1.8,2.2,col="blue",lwd=1,main="Grafico de g(X)")
grid()
set.seed(1410) # definimos una semilla
n <-10^4 # tamaño de la muestra
U <-runif(n, min = 1.9, max = 2.1) # genera un vector con distribución uniforme
g <-Vectorize(function(x) log(x)) # construimos función g
curve(g,1.8,2.2,col="blue",lwd=1,main="Grafico de g(X)")
grid()
Y <- g(U) #genera el vector para cada observación
acumulado<-cumsum(Y)/(1:n)
plot(1:n,acumulado,col="blue",type="l",ylab="Aproximacion",xlab="Iteraciones")
P_est1=mean(Y)
e1<-(abs(P_est1-log(2)))
set.seed(1410) # definimos una semilla
n <-10^4 # tamaño de la muestra
U <-runif(n) # genera un vector con distribución uniforme
g <-Vectorize(function(x) (log(x +1)/2) +(1/2) ) # construimos función g
curve(g,0,1,col="blue",lwd=1,main="Grafico de g(X)")
grid()
Y <- g(U) #genera el vector para cada observación
acumulado<-cumsum(Y)/(1:n)
plot(1:n,acumulado,col="blue",type="l",ylab="Aproximacion",xlab="Iteraciones")
P_est1=mean(Y)
e1<-(abs(P_est1-log(2)))
set.seed(1450) # definimos una semilla
n <-10^4 # tamaño de la muestra
U <-runif(n) # genera un vector con distribución uniforme
g <-Vectorize(function(x) (log(x +1)/2) +(1/2) ) # construimos función g
curve(g,0,1,col="blue",lwd=1,main="Grafico de g(X)")
grid()
Y <- g(U) #genera el vector para cada observación
acumulado<-cumsum(Y)/(1:n)
plot(1:n,acumulado,col="blue",type="l",ylab="Aproximacion",xlab="Iteraciones")
P_est1=mean(Y)
e1<-(abs(P_est1-log(2)))
set.seed(1452) # definimos una semilla
n <-10^4 # tamaño de la muestra
U <-runif(n) # genera un vector con distribución uniforme
g <-Vectorize(function(x) (log(x + 1)/2) + (1/2) ) # construimos función g
curve(g,0,1,col="blue",lwd=1,main="Grafico de g(X)")
grid()
Y <- g(U) #genera el vector para cada observación
acumulado<-cumsum(Y)/(1:n)
plot(1:n,acumulado,col="blue",type="l",ylab="Aproximacion",xlab="Iteraciones")
P_est1=mean(Y)
e1<-(abs(P_est1-log(2)))
set.seed(1457) # definimos una semilla
n <-10^4 # tamaño de la muestra
U <-runif(n) # genera un vector con distribución uniforme
g <-Vectorize(function(x) (log(x + 1)/2) + (1/2) ) # construimos función g
curve(g,0,1,col="blue",lwd=1,main="Grafico de g(X)")
grid()
Y <- g(U) #genera el vector para cada observación
acumulado<-cumsum(Y)/(1:n)
plot(1:n,acumulado,col="blue",type="l",ylab="Aproximacion",xlab="Iteraciones")
P_est1=mean(Y)
e1<-(abs(P_est1-log(2)))
set.seed(147) # definimos una semilla
n <-10^4 # tamaño de la muestra
U <-runif(n) # genera un vector con distribución uniforme
g <-Vectorize(function(x) (log(x + 1)/2) + (1/2) ) # construimos función g
curve(g,0,1,col="blue",lwd=1,main="Grafico de g(X)")
grid()
Y <- g(U) #genera el vector para cada observación
acumulado<-cumsum(Y)/(1:n)
plot(1:n,acumulado,col="blue",type="l",ylab="Aproximacion",xlab="Iteraciones")
P_est1=mean(Y)
e1<-(abs(P_est1-log(2)))
e1
set.seed(100) # establecemos una semilla
n <-10^4 # Tamaño de la muestra
X <- rnorm(n, mean = 5, sd = 25)
acumulado<-cumsum(Y)/(1:n)
plot(1:n,acumulado,col="blue",type="l",ylab="Aproximacion",xlab="Iteraciones")
abline(h=integrate(g,0,1)$value,col="red",lwd=1)
curve(rnorm(n,mean = 5, sd = 25),-0.1,1.1,lwd=1, ylim=c(-1,2))
curve(rnorm(x,mean = 5, sd = 25),-0.1,1.1,lwd=1, ylim=c(-1,2))
x <- rnorm(n, mean = 5, sd = 25)
curve(rnorm(x,mean = 5, sd = 25),-0.1,1.1,lwd=1, ylim=c(-1,2))
x <- rnorm(n, mean = 5, sd = 25)
curve(dnorm(x, mean = 5, sd = 25), -0.1, 1.1, lwd = 1, ylim = c(-1, 2))
x <- rnorm(n, mean = 5, sd = 25)
hist(x, xlim = c(-0.1, 1.1), col = "lightblue", border = "black")
curve(rnorm(x,mean = 5, sd = 25),-0.1,1.1,lwd=1, ylim=c(-1,2))
curve(rnorm(x,mean = 5, sd = 25),-0.1,1.1,lwd=1, ylim=c(-5,5))
curve(rnorm(x,mean = 5, sd = 25),-0.5,1.1,lwd=1, ylim=c(-5,5))
curve(rnorm(x,mean = 5, sd = 25),-0.5,1.1,lwd=1, ylim=c(-25,25))
pi
set.seed(452)
n <-10^4 # Tamaño de la muestra
U <- runif(n,0,2/11)
g <- Vectorize(function(x) ((1/pi) * exp(-((2-x)/2x)-0.5)^2))
g <- Vectorize(function(x) ((1/pi) * exp(-((2-x)/2x))-0.5)^2)))
